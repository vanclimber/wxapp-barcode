// constants for internal usage
export const SET_A = 0;
export const SET_B = 1;
export const SET_C = 2;

// Special characters
export const SHIFT = 98;
export const START_A = 103;
export const START_B = 104;
export const START_C = 105;
export const MODULO = 103;
export const STOP = 106;
export const FNC1 = 207;

// Get set by start code
export const SET_BY_CODE = {
	[START_A]: SET_A,
	[START_B]: SET_B,
	[START_C]: SET_C,
};

// Get next set by code
export const SWAP = {
	101: SET_A,
	100: SET_B,
	99: SET_C,
};

export const A_START_CHAR = String.fromCharCode(208); // START_A + 105
export const B_START_CHAR = String.fromCharCode(209); // START_B + 105
export const C_START_CHAR = String.fromCharCode(210); // START_C + 105

// 128A (Code Set A)
// ASCII characters 00 to 95 (0–9, A–Z and control codes), special characters, and FNC 1–4
export const A_CHARS = "[\x00-\x5F\xC8-\xCF]";

// 128B (Code Set B)
// ASCII characters 32 to 127 (0–9, A–Z, a–z), special characters, and FNC 1–4
export const B_CHARS = "[\x20-\x7F\xC8-\xCF]";

// 128C (Code Set C)
// 00–99 (encodes two digits with a single code point) and FNC1
export const C_CHARS = "(\xCF*[0-9]{2}\xCF*)";

// CODE128 includes 107 symbols:
// 103 data symbols, 3 start symbols (A, B and C), and 1 stop symbol (the last one)
export const PATTERNS = [
    [2, 1, 2, 2, 2, 2, 0, 0], // 0
    [2, 2, 2, 1, 2, 2, 0, 0], // 1
    [2, 2, 2, 2, 2, 1, 0, 0], // 2
    [1, 2, 1, 2, 2, 3, 0, 0], // 3
    [1, 2, 1, 3, 2, 2, 0, 0], // 4
    [1, 3, 1, 2, 2, 2, 0, 0], // 5
    [1, 2, 2, 2, 1, 3, 0, 0], // 6
    [1, 2, 2, 3, 1, 2, 0, 0], // 7
    [1, 3, 2, 2, 1, 2, 0, 0], // 8
    [2, 2, 1, 2, 1, 3, 0, 0], // 9
    [2, 2, 1, 3, 1, 2, 0, 0], // 10
    [2, 3, 1, 2, 1, 2, 0, 0], // 11
    [1, 1, 2, 2, 3, 2, 0, 0], // 12
    [1, 2, 2, 1, 3, 2, 0, 0], // 13
    [1, 2, 2, 2, 3, 1, 0, 0], // 14
    [1, 1, 3, 2, 2, 2, 0, 0], // 15
    [1, 2, 3, 1, 2, 2, 0, 0], // 16
    [1, 2, 3, 2, 2, 1, 0, 0], // 17
    [2, 2, 3, 2, 1, 1, 0, 0], // 18
    [2, 2, 1, 1, 3, 2, 0, 0], // 19
    [2, 2, 1, 2, 3, 1, 0, 0], // 20
    [2, 1, 3, 2, 1, 2, 0, 0], // 21
    [2, 2, 3, 1, 1, 2, 0, 0], // 22
    [3, 1, 2, 1, 3, 1, 0, 0], // 23
    [3, 1, 1, 2, 2, 2, 0, 0], // 24
    [3, 2, 1, 1, 2, 2, 0, 0], // 25
    [3, 2, 1, 2, 2, 1, 0, 0], // 26
    [3, 1, 2, 2, 1, 2, 0, 0], // 27
    [3, 2, 2, 1, 1, 2, 0, 0], // 28
    [3, 2, 2, 2, 1, 1, 0, 0], // 29
    [2, 1, 2, 1, 2, 3, 0, 0], // 30
    [2, 1, 2, 3, 2, 1, 0, 0], // 31
    [2, 3, 2, 1, 2, 1, 0, 0], // 32
    [1, 1, 1, 3, 2, 3, 0, 0], // 33
    [1, 3, 1, 1, 2, 3, 0, 0], // 34
    [1, 3, 1, 3, 2, 1, 0, 0], // 35
    [1, 1, 2, 3, 1, 3, 0, 0], // 36
    [1, 3, 2, 1, 1, 3, 0, 0], // 37
    [1, 3, 2, 3, 1, 1, 0, 0], // 38
    [2, 1, 1, 3, 1, 3, 0, 0], // 39
    [2, 3, 1, 1, 1, 3, 0, 0], // 40
    [2, 3, 1, 3, 1, 1, 0, 0], // 41
    [1, 1, 2, 1, 3, 3, 0, 0], // 42
    [1, 1, 2, 3, 3, 1, 0, 0], // 43
    [1, 3, 2, 1, 3, 1, 0, 0], // 44
    [1, 1, 3, 1, 2, 3, 0, 0], // 45
    [1, 1, 3, 3, 2, 1, 0, 0], // 46
    [1, 3, 3, 1, 2, 1, 0, 0], // 47
    [3, 1, 3, 1, 2, 1, 0, 0], // 48
    [2, 1, 1, 3, 3, 1, 0, 0], // 49
    [2, 3, 1, 1, 3, 1, 0, 0], // 50
    [2, 1, 3, 1, 1, 3, 0, 0], // 51
    [2, 1, 3, 3, 1, 1, 0, 0], // 52
    [2, 1, 3, 1, 3, 1, 0, 0], // 53
    [3, 1, 1, 1, 2, 3, 0, 0], // 54
    [3, 1, 1, 3, 2, 1, 0, 0], // 55
    [3, 3, 1, 1, 2, 1, 0, 0], // 56
    [3, 1, 2, 1, 1, 3, 0, 0], // 57
    [3, 1, 2, 3, 1, 1, 0, 0], // 58
    [3, 3, 2, 1, 1, 1, 0, 0], // 59
    [3, 1, 4, 1, 1, 1, 0, 0], // 60
    [2, 2, 1, 4, 1, 1, 0, 0], // 61
    [4, 3, 1, 1, 1, 1, 0, 0], // 62
    [1, 1, 1, 2, 2, 4, 0, 0], // 63
    [1, 1, 1, 4, 2, 2, 0, 0], // 64
    [1, 2, 1, 1, 2, 4, 0, 0], // 65
    [1, 2, 1, 4, 2, 1, 0, 0], // 66
    [1, 4, 1, 1, 2, 2, 0, 0], // 67
    [1, 4, 1, 2, 2, 1, 0, 0], // 68
    [1, 1, 2, 2, 1, 4, 0, 0], // 69
    [1, 1, 2, 4, 1, 2, 0, 0], // 70
    [1, 2, 2, 1, 1, 4, 0, 0], // 71
    [1, 2, 2, 4, 1, 1, 0, 0], // 72
    [1, 4, 2, 1, 1, 2, 0, 0], // 73
    [1, 4, 2, 2, 1, 1, 0, 0], // 74
    [2, 4, 1, 2, 1, 1, 0, 0], // 75
    [2, 2, 1, 1, 1, 4, 0, 0], // 76
    [4, 1, 3, 1, 1, 1, 0, 0], // 77
    [2, 4, 1, 1, 1, 2, 0, 0], // 78
    [1, 3, 4, 1, 1, 1, 0, 0], // 79
    [1, 1, 1, 2, 4, 2, 0, 0], // 80
    [1, 2, 1, 1, 4, 2, 0, 0], // 81
    [1, 2, 1, 2, 4, 1, 0, 0], // 82
    [1, 1, 4, 2, 1, 2, 0, 0], // 83
    [1, 2, 4, 1, 1, 2, 0, 0], // 84
    [1, 2, 4, 2, 1, 1, 0, 0], // 85
    [4, 1, 1, 2, 1, 2, 0, 0], // 86
    [4, 2, 1, 1, 1, 2, 0, 0], // 87
    [4, 2, 1, 2, 1, 1, 0, 0], // 88
    [2, 1, 2, 1, 4, 1, 0, 0], // 89
    [2, 1, 4, 1, 2, 1, 0, 0], // 90
    [4, 1, 2, 1, 2, 1, 0, 0], // 91
    [1, 1, 1, 1, 4, 3, 0, 0], // 92
    [1, 1, 1, 3, 4, 1, 0, 0], // 93
    [1, 3, 1, 1, 4, 1, 0, 0], // 94
    [1, 1, 4, 1, 1, 3, 0, 0], // 95
    [1, 1, 4, 3, 1, 1, 0, 0], // 96
    [4, 1, 1, 1, 1, 3, 0, 0], // 97
    [4, 1, 1, 3, 1, 1, 0, 0], // 98
    [1, 1, 3, 1, 4, 1, 0, 0], // 99
    [1, 1, 4, 1, 3, 1, 0, 0], // 100
    [3, 1, 1, 1, 4, 1, 0, 0], // 101
    [4, 1, 1, 1, 3, 1, 0, 0], // 102
    [2, 1, 1, 4, 1, 2, 0, 0], // 103
    [2, 1, 1, 2, 1, 4, 0, 0], // 104
    [2, 1, 1, 2, 3, 2, 0, 0], // 105
    [2, 3, 3, 1, 1, 1, 2, 0], // 106
];
